#!/usr/bin/env python

PACKAGE = "dji_m100_trajectory"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

#       	Name			Type      	Level	Description				Default Min	Max
gen.add(	"wind_start",		bool_t,		0,	"Wind start flag", 			False)
gen.add( 	"wind_component_x",	double_t, 	0, 	"Wind component along x-direction",  	0, 	-1, 	1)
gen.add( 	"wind_component_y",	double_t, 	0, 	"Wind component along y-direction",  	0, 	-1, 	1)
gen.add( 	"wind_component_z",	double_t, 	0, 	"Wind component along z-direction",  	0, 	-1, 	1)
wind_type_enum = gen.enum([ 	gen.const("constant", 	  int_t, 0, "Constant wind force"),
				gen.const("sinusoidal",   int_t, 1, "Sinusoidal wind force"),
                       		gen.const("sinusoidal_comb1",int_t, 2, "Sinusoidal combination wind force type 1"),
                       		gen.const("sinusoidal_comb2",int_t, 3, "Sinusoidal combination wind force type 2"),
                       		gen.const("sinusoidal_comb3",int_t, 4, "Sinusoidal combination wind force type 3"),],
                     		"An enum to set wind type")
gen.add(	"wind_type", 		int_t, 		0, 	"Wind type", 				0, 	0, 	4, edit_method=wind_type_enum)
gen.add( 	"max_wind_force",	double_t, 	0, 	"Max applied wind force [N]",  		4, 	0, 	10)
gen.add( 	"mean_wind_force",	double_t, 	0, 	"Mean applied wind force [N]", 		0, 	0, 	10)
gen.add( 	"wind_time_period",	double_t, 	0, 	"Time period for change of wind force",	5, 	1, 	20)

gen.add(	"noise_on",		bool_t,		0,	"Noise on flag", 			False)
noise_type_enum = gen.enum([ 	gen.const("Gauss", 	  	int_t, 0, "Add Gaussian noise to wind force"),
				gen.const("sine",   		int_t, 1, "Add sinusoidal noise to wind force"),
                       		gen.const("Gauss_sine_comb",	int_t, 2, "Add combination of Gaussian and sinusoidal noise to wind force"),],
                     		"An enum to set noise type")
gen.add(	"noise_type", 		int_t, 		0, 	"Noise type", 				0, 	0, 	2, edit_method=noise_type_enum)
gen.add( 	"noise_stddev",		double_t, 	0, 	"Noise standard deviation/magnitude",	0.2, 	0, 	1)
gen.add( 	"noise_time_period",	double_t, 	0, 	"Time period for sinusoidal noise",	0.4, 	0.1, 	1)

exit(gen.generate(PACKAGE, "wind_generation", "set_wind_generation"))
