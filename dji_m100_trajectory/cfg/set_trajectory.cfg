#!/usr/bin/env python

PACKAGE = "dji_m100_trajectory"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

#       	Name		Type      	Level	Description				Default 	Min	Max

gen.add(	"traj_start",	bool_t,		0,	"Trajectory start flag", 		False)
gen.add(	"max_z_start",	bool_t,		0,	"Set z refrence start at max_z",	False)
gen.add(	"lidar_start",	bool_t,		0,	"Lidar start flag", 			False)
gen.add(	"climb",	bool_t,		0,	"Climb to max_z", 			False)
gen.add(	"land",		bool_t,		0,	"Land to ground", 			False)
gen.add(	"change_z",	bool_t,		0,	"Change in height flag", 		False)
gen.add("pub_on_setpoint_position",bool_t,	0,	"Publish flag on /mavros/setpoint_position/local", False)

trajectory_enum = gen.enum([ 	gen.const("hover_origin", int_t, 0, "Hover Trajectory (at origin)"),
				gen.const("hover",        int_t, 1, "Hover Trajectory"),
				gen.const("hover_lidar",  int_t, 2, "Hover with Lidar Trajectory"),
                       		gen.const("circle",       int_t, 3, "Circle Trajectory"),
                       		gen.const("figure_8",     int_t, 4, "Figure 8 Trajectory"),
				gen.const("square",	  int_t, 5, "Square Trajectory"),
				gen.const("setpoint",	  int_t, 6, "Setpoint Trajectory"),],
                     		"An enum to set flight trajectory")
gen.add(	"traj_type", 		int_t, 		0, 	"Trajectory type", 			0, 	0, 	6, edit_method=trajectory_enum)

gen.add( 	"pos_pub_delay",	  int_t, 	0, 	"Delay in position publisher",          40, 	0, 	200)

gen.add( 	"max_z",		double_t, 	0, 	"Max height [m]",  		   	1.8, 	-5, 	5)
gen.add( 	"x_hover",		double_t, 	0, 	"Hover X position [m]",  		0, 	-5.0, 	5.0)
gen.add( 	"y_hover",		double_t, 	0, 	"Hover Y position [m]",  		0, 	-5.0, 	5.0)
gen.add( 	"z_hover",		double_t, 	0, 	"Hover Z position [m]",  		0, 	-5.0, 	5.0)
gen.add( 	"yaw_hover",		int_t, 		0, 	"Hover yaw angle [deg]",  		0, 	-180, 	180)
gen.add( 	"wall_dist",		double_t, 	0, 	"Distance from wall [m]",  		1, 	0.5, 	10.0)
gen.add( 	"x_sp_start",		double_t, 	0, 	"Start setpoint X position [m]",  	0, 	-10.0, 	10.0)
gen.add( 	"y_sp_start",		double_t, 	0, 	"Start setpoint Y position [m]",  	0, 	-10.0, 	10.0)
gen.add( 	"z_sp_start",		double_t, 	0, 	"Start setpoint Z position [m]",  	0, 	0, 	3.5)
gen.add( 	"x_sp_end",		double_t, 	0, 	"End setpoint X position [m]",  	0, 	-10.0, 	10.0)
gen.add( 	"y_sp_end",		double_t, 	0, 	"End setpoint Y position [m]",  	0, 	-10.0, 	10.0)
gen.add( 	"z_sp_end",		double_t, 	0, 	"End setpoint Z position [m]",  	0, 	0, 	3.5)
gen.add( 	"z_interval_dist",	double_t, 	0, 	"Z interval distance [m]",  		0, 	0, 	10.0)

gen.add( 	"del_z",		double_t, 	0, 	"Change in height [m]",  	   	0.3, 	0, 	1.0)
gen.add( 	"des_radius",		double_t, 	0, 	"Radius of Circle [m]",  	   	1.0, 	0.1, 	1.5)
gen.add( 	"des_velocity",		double_t, 	0, 	"Absolute Velocity of Circle [m/s]",  	0.5, 	0.1, 	1.5)

gen.add( 	"climb_rate",		double_t, 	0, 	"Climbing rate",  		   	0.4, 	0.1, 	0.6)
gen.add( 	"land_rate",		double_t, 	0, 	"Landing rate",  		   	0.4, 	0.1, 	0.6)

exit(gen.generate(PACKAGE, "m100_trajectory", "set_trajectory"))
