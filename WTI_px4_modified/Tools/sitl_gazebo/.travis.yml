env:
  global:
    - CCACHE_DIR=$HOME/.ccache
    - PX4_DOCKER_REPO=px4io/px4-dev-ros:2018-04-22

matrix:
    include:
        - os: linux
          language: cpp
          services:
            - docker
          cache:
            ccache: true
          env: # Cmake build
            - BUILD="mkdir Build; cd Build; cmake ..; make -j$(nproc) -l$(nproc)"
        - os: linux
          language: cpp
          services:
            - docker
          cache:
            ccache: true
          env: # Catkin build
            - BUILD="source /opt/ros/kinetic/setup.bash; mkdir -p ~/catkin_ws/src; cd ~/catkin_ws/src; catkin_init_workspace; ln -s ${TRAVIS_BUILD_DIR} .; cd ~/catkin_ws; catkin_make -j$(nproc) -l$(nproc)"
        - os: linux
          language: cpp
          services:
            - docker
          cache:
            ccache: true
          env: # Validate SDF schemas
            - BUILD="source ./scripts/validate_sdf.bash"
        - os: osx
          osx_image: xcode9.3
          language: cpp
          cache:
            ccache: true
          env:
            - GAZEBO_VERSION="gazebo8"
        - os: osx
          osx_image: xcode9.3
          language: cpp
          cache:
            ccache: true
          env:
            - GAZEBO_VERSION="gazebo9"

before_install:
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
    brew update;
    git clone --depth 1 https://github.com/mavlink/c_library_v2.git /usr/local/include/mavlink/v2.0;
    rm -rf /usr/local/include/mavlink/v2.0/.git;
    fi

install:
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
    brew tap PX4/px4;
    brew install px4-dev;
    brew tap osrf/simulation;
    brew install opencv ${GAZEBO_VERSION};
    brew link --overwrite numpy;
    brew cask reinstall xquartz java;
    sudo -H pip2 install --upgrade pip setuptools;
    sudo -H pip2 install rospkg pyserial empy toml numpy pandas jinja2;
    fi

script:
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
    mkdir Build;
    cd Build && cmake .. && make -j$(sysctl -n hw.physicalcpu) -l$(sysctl -n hw.physicalcpu);
    else docker run -it --rm -w ${TRAVIS_BUILD_DIR} --env=CCACHE_DIR="${CCACHE_DIR}" --env=LOCAL_USER_ID="$(id -u)" --volume=${CCACHE_DIR}:${CCACHE_DIR}:rw --volume=${TRAVIS_BUILD_DIR}:${TRAVIS_BUILD_DIR}:rw ${PX4_DOCKER_REPO} /bin/bash -e -c "${BUILD}";
    fi
